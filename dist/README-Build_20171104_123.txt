###
Sat Nov  4 01:21:06 PDT 2017

  File: 20214695 Nov  4 01:20 hleOfxQuotes-Build_20171104_123-app.jar
  https://github.com/hleofxquotes/hleofxquotes/blob/master/dist/hleOfxQuotes-Build_20171104_123-app.jar
  Click on 'View Raw' to download
  Your browser might warn that "This type of file can harm your computer. Do you want to keep ...". Browser 
  will show this warning for all files with suffix .jar.

  Once downloaded,
     * You can double-click to start
     * OR open command-line and run
       java -jar hleOfxQuotes-Build_20171104_123-app.jar

     You can rename hleOfxQuotes-Build_20171104_123-app.jar to a shorter name if you like.
     See a note on Java 8 below.

  Caveat:

  * Proceed with caution. I try to get this out quickly so that folks won't have to deal with quotes outage BUT 
    that means little testing. If you see something not working, post a message on
https://social.microsoft.com/Forums/mvpforum/en-US/home?forum=money

  * Traded date and time - Yahoo2 source quote: does not appear to have a way to get the info. So we will have 
to make due with the fall-back values which the current time when the quotes were fetched.

As noted by john.b_ 
... I typically download MF quotes in the morning for the prior trading day.  Since the Yahoo2 source doesn't 
provide last trade date, DTASOF is set to current date.  Therefore, I use the Date Offset of -1 to insure it 
imports with the correct trade date in my scenario.  

If you suggestion for better default, I am all ear.


  Fixes:

  * Mutual fund has wrong SECTYPE (was STOCKINFO, should be MFINFO) - Thanks BobSmiley
  Example:
      <MFINFO>
        <!--Ticker from quote source is: PRBLX-->
        <!--Security is treated as Mutual Fund-->
        <SECINFO>
          <!--DTASOF local time is Sat Nov 04 01:16:59 PDT 2017-->
          <SECID>
            <UNIQUEID>PRBLX</UNIQUEID>
            <UNIQUEIDTYPE>TICKER</UNIQUEIDTYPE>
          </SECID>
          <SECNAME>Parnassus Core Equity Fund-Inve</SECNAME>
          <TICKER>PRBLX</TICKER>
          <UNITPRICE>44.14</UNITPRICE>
          <DTASOF>20171104081659</DTASOF>
          <CURRENCY>
            <CURRATE>1.00</CURRATE>
            <CURSYM>USD</CURSYM>
          </CURRENCY>
          <MEMO>Price as of date based on closing price</MEMO>
        </SECINFO>
        <MFTYPE>OPENEND</MFTYPE>
      </MFINFO>

  * If you have large number of symbols, should be faster now (Enable multi-thread fetch)

  * Remember the last tab. So if you had last selected the Yahoo2 tab, you will get the same tab selected on next startup. 

  * Fix wrong build number displayed on Window's title.
  
###
Thu Nov  2 16:32:20 PDT 2017

  File: 20211857 Nov  2 16:30 hleOfxQuotes-Build_20171102_120-app.jar

  This is an emergency build to support an alternate Yahoo quote source. (Yahoo2)

  Caveat

  * You will need Java 1.8 (see below)

  * It has not been much tested. It works for me and I am sharing ;-)

  * It will be a bit slower than the "original Yahoo quote source" if you have a lot of symbols: 
    we have to look up the symbol one at the time.

  * Double-click on the jar file might work. Otherwise, open a command-line window and type in
   java -jar hleOfxQuotes-Build_20171102_120-app.jar

   You can rename hleOfxQuotes-Build_20171102_120-app.jar to something shorter if you like

  * I only test US stocks and mutual fund symbols.

  * Once started, select the tab label 'Yahoo2', enter symbols (you can copy and paste from the 'original'
    Yahoo tab.

Java 1.8

  You will need Java 1.8 or later. Otherwise, you will get error looking something like this

Exception in thread "main" java.lang.UnsupportedClassVersionError: app/GUI : Unsupported major.minor version 52.0
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:803)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:442)
	at java.net.URLClassLoader.access$100(URLClassLoader.java:64)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:354)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:348)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:347)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:312)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
	at sun.launcher.LauncherHelper.checkAndLoadMain(LauncherHelper.java:482)

